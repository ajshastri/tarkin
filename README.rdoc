= TARKIN

Tarkin is just another team password manager. 

View online demo on http://tarkin.tg.pl

== Security
All passwords are crypted with *AES-256* with the group public key. Group private key is ciphered by the user public key. User private key is crypte with user password. Thus, to decrypt the password, you must have user password - this password decrypts the user private key, with which system decrypts the groups private key, which is used to decrypt the password... Sounds complicated? Well, it is completely transparent for the user - you just need to remember your password. 

This means that the only group members can read the stored passwords. There is no way to read it even if you have an access to the whole database. This also means that <b>you can't loose you password to the system</b>. There is no way to retrieve lost password.

== Modern UI compatible with mobile
UI is based on {Zurb Foundation}[http://foundation.zurb.com] and it is compatible with mobiles.

=== Security
Passwords are shown only when highlighted. System downloads it on demand via Ajax, so they are not stored in HTML.
http://www.tg.pl/tarkin/tarkin1.png

=== Quick search
Search for items and directories using Unix-like wildcard
http://www.tg.pl/tarkin/tarkin2.png

=== Unix-style directories
You can group your passwords in Unix-like directories and use this folders in URLs to go directly to specified path.

=== Online edition
http://www.tg.pl/tarkin/tarkin3.png

=== Online administration
See demo on http://tarkin.tg.pl to find out more

== Command-line tools
*TODO*

== API
Tarkin API allows you to use it with your own scripts, so you don't need to store passwords with plain-text anymore and you have one centralized system for all passwords, so you need to change it only in one place.

To not store a password to tarkin in the script, you should generate a token, then you can use this token to authorize:

    resp = conn.get("http://localhost:3000/_api/v1/_authorize", email: "email0@example.com", password="password0")
    token = resp.body if resp.status == 200
    #=> "vwbtYjEtZl4IY31HBfJbXD31EUdTLv4stnzVQG8AiiZDagQ3s2IIKcRp..." 

in Shell:
    
    OS_TOKEN=`curl "http://localhost:3000/_api/v1/_authorize?email=email0@example.com&password=password0"`

or, using http authentication:

    OS_TOKEN=`curl --user email0@example.com:password0 "http://localhost:3000/_api/v1/_authorize"`

then to get specified password use URL: host/_api/v1/*Unix-like-path*

    PASSWORD=`curl -H "Authorization: Token token=$OS_TOKEN" "http://localhost:3000/_api/v1/db/postgres/root"`

See all API documentation on http://www.tg.pl/tarkin

* Sessions API (authentication) - http://www.tg.pl/tarkin/API/V1/SessionsController.html

* Directories API (search, list) - http://www.tg.pl/tarkin/API/V1/DirectoriesController.html

* Passwords API (get password) - http://www.tg.pl/tarkin/API/V1/ItemsController.html


== Installation

=== Ruby

Install Ruby version 2.2 or higher, as described in {Ruby for Admins}(http://rubyforadmins.com/installation)

=== Rails

Get Rails 4.2.1 from http://rubyonrails.com

=== Get Tarking from Github
    git clone git@github.com:grych/tarkin.git

=== Bundler
    gem install bundler
    cd tarkin
    bundle install

=== Create first user, group and required root directory
    rails console
    u = User.create first_name: "John", last_name: "Doe", email: 'email@examaple.com', password: 'password'
    u.add Group.new(name: 'Admins')
    Directory.create(name: 'root')

=== Compile assets and start server
    RAILS_ENV=production bin/rake assets:precompile
    bundle exec rails server -d -e production --binding 127.0.0.1 -p 5000

== Author
This software is written by Tomek 'Grych' Gryszkiewicz. Do not hestitate to contact me at mailto:grych@tg.pl or visit {my web page}[http://www.tg.pl].

== License
The MIT License (MIT)

Copyright (c) 2015 Tomek Gryszkiewicz <grych@tg.pl>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
